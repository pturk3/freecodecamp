* {
    box-sizing: border-box;
}

.gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;
    /* Notice how some of your images have become distorted. This is because the images have different aspect ratios. Rather than setting each aspect ratio individually, you can use the object-fit property to determine how images should behave. */
    object-fit: cover;
    border-radius: 10px;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}

header {
    text-align: center;
    text-transform: uppercase;
    padding: 32px;
    background: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
}

.gallery {
    display: flex;
    flex-direction: row;
    /* The flex-wrap property determines how your flex items behave when the flex container is too small. Setting it to wrap will allow the items to wrap to the next row or column. nowrap (default) will prevent your items from wrapping and shrink them if needed. */
    flex-wrap: wrap;
    /* The justify-content property determines how the items inside a flex container are positioned along the main axis, affecting their position and the space around them. */
    justify-content: center;
    align-items: center;
    padding: 20px 10px;
    max-width: 1400px;
    margin: 0 auto;
    /* The gap CSS shorthand property sets the gaps, also knowns as gutters, between rows and columns. The gap property and its row-gap and column-gap sub-properties provide this functionality for flex, grid, and multi-column layout. You apply the property to the container element. */
    gap: 16px;
}

.gallery::after {
    content: "";
    width: 350px;
}